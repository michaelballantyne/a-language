#lang a

(require runtime/runtime)
(provide compiled-module compiled-module-export-internal-name)

(def andmap
  (fn (f l)
    (foldl (fn (a b) (and a b)) true
           (map f l))))

(def compiled-module
  (fn (imports exports body-code)
    (if (not (and
                (and
                    (and (list? imports) (andmap string? imports))
                    (and (hash? exports)
                         (and
                           (andmap string? (hash-keys exports))
                           (andmap string? (hash-values exports)))))
                (string? body-code)))
      (error "compiled-module" "malformed module declaration")
      (obj :imports imports
           :exports exports
           :body-code body-code))))

(def compiled-module-export-internal-name
  (fn (decl name)
    (get (get decl :exports) name)))
